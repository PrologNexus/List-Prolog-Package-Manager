[["luciangreen","State-Machine-to-List-Prolog","Converts State Saving Interpreter State Machines to List Prolog algorithms.",[["luciangreen","SSI"]]],["luciangreen","luciancicd","Single-user continuous integration and continuous deployment.",[["luciangreen","listprologinterpreter"],["luciangreen","List-Prolog-Package-Manager"],["luciangreen","Prolog-to-List-Prolog"],["luciangreen","Philosophy"]]],["luciangreen","File2List2Br","Breasons out long files.",[["luciangreen","culturaltranslationtool"],["luciangreen","Languages"],["luciangreen","listprologinterpreter"],["luciangreen","Text-to-Breasonings"]]],["luciangreen","List-Prolog-Package-Manager","Registry manager and installer for repositories with dependencies.",[]],["luciangreen","Text-to-Breasonings","Helps Earn High Distinctions.",[["luciangreen","Algorithm-Writer-with-Lists"],["luciangreen","Languages"],["luciangreen","culturaltranslationtool"],["luciangreen","listprologinterpreter"]]],["luciangreen","t2ab","Helps Earn High Distinctions by breasoning out object algorithms.",[["luciangreen","Text-to-Breasonings"]]],["luciangreen","Text-to-Object-Name","Helps Prepare to Earn High Distinctions.",[["luciangreen","Lucian-Academy-Data"],["luciangreen","Text-to-Breasonings"],["luciangreen","listprologinterpreter"]]],["luciangreen","Languages","Use repositories in other languages.",[["luciangreen","culturaltranslationtool"],["luciangreen","listprologinterpreter"],["luciangreen","Prolog-to-List-Prolog"]]],["luciangreen","Combination-Algorithm-Writer","Combination Algorithm Writer",[]],["luciangreen","Combination-Algorithm-Writer-Stable","Stable version of Combination Algorithm Writer",[]],["luciangreen","listprologinterpreter","List Prolog Interpreter",[["luciangreen","SSI"],["luciangreen","culturaltranslationtool"],["luciangreen","Languages"]]],["luciangreen","Algorithm-Writer-with-Lists","Generates Random Algorithms",[["luciangreen","culturaltranslationtool"],["luciangreen","Languages"],["luciangreen","listprologinterpreter"],["luciangreen","Text-to-Breasonings"],["luciangreen","Lucian-Academy"],["luciangreen","Prolog-to-List-Prolog"]]],["luciangreen","Combination-Algorithm-Writer-Multiple-Predicates","Writes algorithms with multiple predicates.",[["luciangreen","Languages"],["luciangreen","culturaltranslationtool"],["luciangreen","listprologinterpreter"]]],["luciangreen","Philosophy","List of Philosophy Algorithms.",[["luciangreen","SSI"],["luciangreen","Lucian-Academy"],["luciangreen","List-Prolog-to-Prolog-Converter"],["luciangreen","Prolog-to-List-Prolog"],["luciangreen","LuciansHandBitMap-Font"],["luciangreen","listprologinterpreter"],["luciangreen","Languages"],["luciangreen","culturaltranslationtool"],["luciangreen","mindreader"],["luciangreen","Text-to-Breasonings"],["luciangreen","Music-Composer"],["luciangreen","State-Machine-to-List-Prolog"]]],["luciangreen","mindreader","Contains Prolog programs that can be used by an individual to read their mind using meditation.",[["luciangreen","Languages"],["luciangreen","culturaltranslationtool"],["luciangreen","listprologinterpreter"],["luciangreen","Text-to-Breasonings"],["luciangreen","Music-Composer"]]],["luciangreen","Music-Composer","Music Composer can (optionally mind read to) create songs.  Requires asc2mid (http://www.archduke.org/midi/, compile with a C compiler before running, call application asc2mid and place in Music-Composer folder).",[["luciangreen","Languages"],["luciangreen","culturaltranslationtool"],["luciangreen","listprologinterpreter"],["luciangreen","mindreader"]]],["luciangreen","Combination-Algorithm-Writer-with-Predicates","Combination Algorithm Writer with Predicates.",[]],["luciangreen","Prolog-to-List-Prolog","Converts Prolog algorithms to List Prolog algorithms.",[["luciangreen","List-Prolog-to-Prolog-Converter"],["luciangreen","listprologinterpreter"]]],["luciangreen","c2lp","Converts C algorithms to List Prolog algorithms.",[["luciangreen","listprologinterpreter"],["luciangreen","Prolog-to-List-Prolog"]]],["luciangreen","texttoalg","Text to Algorithm.",[["luciangreen","Languages"],["luciangreen","culturaltranslationtool"],["luciangreen","listprologinterpreter"],["luciangreen","Text-to-Breasonings"]]],["luciangreen","texttoalg2","Text to Algorithm 2.",[["luciangreen","Languages"],["luciangreen","culturaltranslationtool"],["luciangreen","listprologinterpreter"],["luciangreen","Text-to-Breasonings"],["luciangreen","texttoalg"]]],["luciangreen","LuciansHandBitMap-Font","LuciansHandBitMap Font.",[]],["luciangreen","Split-on-Phrases","Splits text files into groups of files.",[["luciangreen","Languages"],["luciangreen","culturaltranslationtool"],["luciangreen","listprologinterpreter"]]],["luciangreen","List-Prolog-to-Prolog-Converter","Converts List Prolog code to Prolog code.",[["luciangreen","Prolog-to-List-Prolog"],["luciangreen","Languages"],["luciangreen","culturaltranslationtool"],["luciangreen","listprologinterpreter"]]],["luciangreen","lp2c","Converts List Prolog code to C code.",[["luciangreen","Languages"],["luciangreen","culturaltranslationtool"],["luciangreen","listprologinterpreter"]]],["luciangreen","Program-Finder-from-Data-","Finds recursive algorithms from the structure of data.",[["luciangreen","Languages"],["luciangreen","culturaltranslationtool"],["luciangreen","listprologinterpreter"]]],["luciangreen","culturaltranslationtool","Cultural Translation Tool.  Requires Translation Shell and gawk.",[["luciangreen","listprologinterpreter"]]],["luciangreen","grammarinterpreter","Grammar Interpreter.",[]],["luciangreen","databaseformulafinder","Database Formula Finder.",[]],["luciangreen","Essay-Helper","Helps write essays using KNNs.",[["luciangreen","Languages"],["luciangreen","listprologinterpreter"],["luciangreen","culturaltranslationtool"],["luciangreen","mindreader"],["luciangreen","Prolog-to-List-Prolog"],["luciangreen","Philosophy"]]],["luciangreen","Simple-List-Prolog-to-List-Prolog","Converts Simple List Prolog code to List Prolog code.",[]],["luciangreen","Logic-Formula-Finder","Finds formulas with and, or and not from data.",[]],["luciangreen","qa_db_finder","Finds database style list-based algorithms with question answering",[]],["luciangreen","Time_Machine","Travel through time with meditation.",[["luciangreen","Lucian-Academy"],["luciangreen","Philosophy"],["luciangreen","listprologinterpreter"],["luciangreen","Text-to-Breasonings"]]],["luciangreen","Lucian-Academy","Automates the Lucian Academy",[["luciangreen","listprologinterpreter"],["luciangreen","Languages"],["luciangreen","culturaltranslationtool"],["luciangreen","Algorithm-Writer-with-Lists"],["luciangreen","Text-to-Breasonings"],["luciangreen","mindreader"]]],["luciangreen","Daily-Regimen","Scripts for daily meditation, bot prep, uni and breasoning.",[["luciangreen","listprologinterpreter"],["luciangreen","Languages"],["luciangreen","culturaltranslationtool"],["luciangreen","Algorithm-Writer-with-Lists"],["luciangreen","Text-to-Breasonings"],["luciangreen","mindreader"]]],["luciangreen","SSI","State Saving Interpreter",[["luciangreen","listprologinterpreter"]]],["luciangreen","Lucian-Academy-Data","Data files for Text-to-Object-Name.",[]],["luciangreen","c","Test.",[]],["luciangreen","gitl","Decentralised Git.",[["luciangreen","listprologinterpreter"],["luciangreen","luciancicd"]]]]